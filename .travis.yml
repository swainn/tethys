# Build and Test Tethys Platform on Travis
language: c

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Turn off email notifications
notifications:
  email: false

os:
  - linux
  - osx

services:
  - docker

stages:
  - name: test
    if: (branch = master) AND (tag IS NOT present)
  - name: docker-build
    if: (tag IS present) OR ((branch = master) AND (type != pull_request))
  - name: conda-build
    if: (tag IS present) OR ((branch = master) AND (type != pull_request))

install:
  - cd ..
  - bash ./tethys/scripts/install_tethys.sh -h
  - bash ./tethys/scripts/install_tethys.sh --partial-tethys-install me -t $PWD

  # activate conda environment
  - . ~/miniconda/etc/profile.d/conda.sh
  - conda activate tethys
  - conda list

  # generate new settings.py file with tethys_super user for tests
  - tethys gen settings --db-username tethys_super --db-password pass --db-port 5436

  # start database server
  - tethys db configure

  # install test dependencies
  - pip install python-coveralls

# command to run tests
script:
  - tethys test -c -u -v 2

# generate test coverage information
after_success:
  - ls -al
  - coveralls

jobs:
  include:
    - stage: docker-build
      install:
        - skip
      script:
        - echo "Building docker images"

        - >
          if [ -z "$TRAVIS_TAG"]; then
            export LATEST_TAG="master";
            echo "Main tag is $LATEST_TAG";
            docker build -t tethysplatform/tethys-core:$LATEST_TAG .;
          else
            export LATEST_TAG="latest";
            echo "Branch tag is $TRAVIS_TAG and Main tag is $LATEST_TAG";
            docker build -t tethysplatform/tethys-core:$TRAVIS_TAG -t tethysplatform/tethys-core:$LATEST_TAG .;
          fi

        - echo "Pushing to docker registry"
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

        - >
          if [ -z "$TRAVIS_TAG" ]; then
            echo "No Branch tag is Present";
          else
            docker push tethysplatform/tethys-core:$TRAVIS_TAG;
          fi

        - docker push tethysplatform/tethys-core:$LATEST_TAG
      after_success:
        - skip
    - stage: conda-build
      install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - hash -r

        - conda config --set always_yes yes --set changeps1 no
        - conda update -q conda

        - conda install conda-build anaconda-client
        - conda config --add channels conda-forge
        - conda config --add channels tethysplatform/label/dev
        - conda config --add channels tethysplatform
        - conda config --set anaconda_upload no

        - mkdir -p ~/conda-bld
      script:
        - echo "Building conda package"
        - export CONDA_BLD_PATH=~/conda-bld
        - conda build ./conda.recipe

        - echo "Uploading conda package"
                
        - >
          if [ -z "$TRAVIS_TAG" ]; then
            echo "No Branch tag is Present. Uploading to dev";
            anaconda -t $CONDA_UPLOAD_TOKEN upload -u tethysplatform -l dev $CONDA_BLD_PATH/noarch/tethysplatform*.tar.bz2 --force;
          else
            echo "Branch tag is $TRAVIS_TAG. Uploading to master";
            anaconda -t $CONDA_UPLOAD_TOKEN upload -u tethysplatform $CONDA_BLD_PATH/noarch/tethysplatform*.tar.bz2 --force;
          fi
      after_success:
        - skip
