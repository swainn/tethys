# Build and Test Tethys Platform on Travis
language: c

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Turn off email notifications
notifications:
  email: false

os:
  - linux
  - osx

env:
  - CONDA_BUILD_PIN_LEVEL=minor

services:
  - docker

stages:
  - name: test
    if: tag IS NOT present
  - name: docker-build
    if: (branch = master) OR (branch = release) OR (tag IS present)
  - name: conda-build
    if: (branch = master) OR (branch = release) OR (tag IS present)

install:
  - cd ..
  - bash ./tethys/scripts/install_tethys.sh -h
  - bash ./tethys/scripts/install_tethys.sh --partial-tethys-install meds -n tethys -s $PWD/tethys

  # activate conda environment
  - . ~/miniconda/etc/profile.d/conda.sh
  - conda activate tethys
  - conda list
  - tethys db start
  # install test dependencies
  - pip install coveralls
  - cd $TRAVIS_BUILD_DIR

script:
  # command to run tests
  - tethys test -c -u -v 2

after_success:
  - >
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      # generate test coverage information
      coveralls
    fi

jobs:
  include:
    - stage: docker-build
      install:
        - skip
      script:
        - echo "Building docker images"
        - >
          if [ -z "$TRAVIS_TAG"]; then
            export LATEST_TAG="master";
            echo "Main tag is $LATEST_TAG";
            docker build -t tethysplatform/tethys-core:$LATEST_TAG .;
          else
            export LATEST_TAG="latest";
            echo "Branch tag is $TRAVIS_TAG and Main tag is $LATEST_TAG";
            docker build -t tethysplatform/tethys-core:$TRAVIS_TAG -t tethysplatform/tethys-core:$LATEST_TAG .;
          fi
        - >
          if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
            echo "Pushing to docker registry";
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
            if [ -z "$TRAVIS_TAG" ]; then
              echo "No Branch tag is Present";
            else
              docker push tethysplatform/tethys-core:$TRAVIS_TAG;
            fi
            docker push tethysplatform/tethys-core:$LATEST_TAG;
          else
            echo "Uploading is skipped for pull requests.";
          fi
      after_success:
        - skip
    - stage: conda-build
      install:
        - cd ../
        - bash ./tethys/scripts/install_tethys.sh --partial-tethys-install me -n tethys -s $PWD/tethys
        - . ~/miniconda/etc/profile.d/conda.sh
        - conda activate tethys
        - hash -r
        - conda config --set always_yes yes --set changeps1 no
        - conda update -q conda
        - conda install conda-build anaconda-client
        - conda config --set anaconda_upload no
        - mkdir -p ~/conda-bld
        - export CONDA_BLD_PATH=~/conda-bld
      script:
        - echo "Generating conda recipe."
        - >
          if [ -z "$TRAVIS_TAG" ]; then
            echo "No Branch tag is Present. Generating without constrained dependencies.";
            tethys gen metayaml --overwrite;
          else
            echo "Branch tag is $TRAVIS_TAG. Generating with constrained dependencies.";
            tethys gen metayaml -p minor --overwrite;
          fi
        - cat ./tethys/conda.recipe/meta.yaml
        - echo "Building conda package..."
        - conda build -c tethysplatform -c conda-forge ./tethys/conda.recipe
        - >
          if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
            echo "Uploading conda package.";
            if [ -z "$TRAVIS_TAG" ]; then
              echo "No tag found. Uploading to dev...";
              anaconda -t $CONDA_UPLOAD_TOKEN upload -u tethysplatform -l dev $CONDA_BLD_PATH/noarch/tethys-platform*.tar.bz2 --force;
            else
              echo "Branch tag is $TRAVIS_TAG. Uploading to main...";
              anaconda -t $CONDA_UPLOAD_TOKEN upload -u tethysplatform $CONDA_BLD_PATH/noarch/tethys-platform*.tar.bz2 --force;
            fi
          else
            echo "Uploading is skipped for pull requests.";
          fi
      after_success:
        - skip
