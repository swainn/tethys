# Generated by Django 2.2.8 on 2020-01-18 02:43

from django.db import migrations, models
import tethys_services.models


class Migration(migrations.Migration):

    replaces = [('tethys_services', '0001_initial_20')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('engine', models.CharField(choices=[('tethys_dataset_services.engines.CkanDatasetEngine', 'CKAN'), ('tethys_dataset_services.engines.HydroShareDatasetEngine', 'HydroShare')], default='tethys_dataset_services.engines.CkanDatasetEngine', max_length=200)),
                ('endpoint', models.CharField(max_length=1024, validators=[tethys_services.models.validate_dataset_service_endpoint])),
                ('public_endpoint', models.CharField(blank=True, max_length=1024, validators=[tethys_services.models.validate_dataset_service_endpoint])),
                ('apikey', models.CharField(blank=True, max_length=100)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Dataset Service',
                'verbose_name_plural': 'Dataset Services',
            },
        ),
        migrations.CreateModel(
            name='PersistentStoreService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('host', models.CharField(default='localhost', max_length=255)),
                ('port', models.IntegerField(default=5435, validators=[tethys_services.models.validate_persistent_store_port])),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=100)),
                ('engine', models.CharField(choices=[('postgresql', 'PostgreSQL')], default='postgresql', max_length=50)),
            ],
            options={
                'verbose_name': 'Persistent Store Service',
                'verbose_name_plural': 'Persistent Store Services',
            },
        ),
        migrations.CreateModel(
            name='SpatialDatasetService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('engine', models.CharField(choices=[('tethys_dataset_services.engines.GeoServerSpatialDatasetEngine', 'GeoServer'), ('thredds-engine', 'THREDDS')], default='tethys_dataset_services.engines.GeoServerSpatialDatasetEngine', max_length=200)),
                ('endpoint', models.CharField(max_length=1024, validators=[tethys_services.models.validate_spatial_dataset_service_endpoint])),
                ('public_endpoint', models.CharField(blank=True, max_length=1024, validators=[tethys_services.models.validate_spatial_dataset_service_endpoint])),
                ('apikey', models.CharField(blank=True, max_length=100)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Spatial Dataset Service',
                'verbose_name_plural': 'Spatial Dataset Services',
            },
        ),
        migrations.CreateModel(
            name='WebProcessingService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('endpoint', models.CharField(max_length=1024, validators=[tethys_services.models.validate_wps_service_endpoint])),
                ('public_endpoint', models.CharField(blank=True, max_length=1024, validators=[tethys_services.models.validate_wps_service_endpoint])),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Web Processing Service',
                'verbose_name_plural': 'Web Processing Services',
            },
        ),
    ]
